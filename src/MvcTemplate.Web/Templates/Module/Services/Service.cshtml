@model ModuleModel
using MvcTemplate.Data.Core;
using MvcTemplate.Objects;
using System;
using System.Linq;
using System.Threading.Tasks;

namespace MvcTemplate.Services
{
    public class @Model.Service : BaseService, @Model.IService
    {
        public @(Model.Service)(IUnitOfWork unitOfWork)
            : base(unitOfWork)
        {
        }

        public async Task<TView> Get<TView>(Int32 id) where TView : BaseView
        {
            return await UnitOfWork.GetAsAsync<@Model.Model, TView>(id);
        }

        public IQueryable<@Model.View> GetViews()
        {
            return UnitOfWork
                .Select<@Model.Model>()
                .To<@Model.View>()
                .OrderByDescending(@Model.ModelVarName => @(Model.ModelVarName).Id);
        }

        public async Task Create(@Model.View view)
        {
            @Model.Model @Model.ModelVarName = UnitOfWork.To<@Model.Model>(view);

            await UnitOfWork.InsertAsync(@Model.ModelVarName);
            await UnitOfWork.SaveChangesAsync();
        }
        public async Task Edit(@Model.View view)
        {
            @Model.Model @Model.ModelVarName = UnitOfWork.To<@Model.Model>(view);

            UnitOfWork.Update(@Model.ModelVarName);
            await UnitOfWork.SaveChangesAsync();
        }
        public async Task Delete(Int32 id)
        {
            UnitOfWork.Delete<@Model.Model>(id);
            await UnitOfWork.SaveChangesAsync();
        }
    }
}
